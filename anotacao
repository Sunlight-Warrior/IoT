Usar o **Blynk** com a **ESP32** para criar um sistema de controle via MQTT é uma excelente maneira de criar uma interface gráfica interativa no seu smartphone, sem precisar escrever muito código para a interface.

### Passo a Passo: **Conectar a ESP32 ao Blynk via MQTT**

O **Blynk** é uma plataforma de desenvolvimento IoT que permite criar interfaces gráficas para controlar dispositivos como a ESP32. A conexão do Blynk com a ESP32 pode ser feita de duas formas: via **Wi-Fi** (usando o servidor Blynk) ou via **MQTT**. Vamos focar na comunicação via **MQTT** para permitir controle mais direto de dados entre a ESP32 e o app.

### 1. **Criar a Conta e o Projeto no Blynk**

Primeiro, vamos configurar o Blynk no smartphone.

#### Passo 1: Criar conta no Blynk

1. Baixe o **Blynk** na **Play Store** (Android) ou **App Store** (iOS).
2. Crie uma conta ou faça login na plataforma Blynk.

#### Passo 2: Criar um novo projeto

1. Abra o app Blynk e clique em **Novo Projeto**.
2. Escolha o **ESP32** como dispositivo.
3. Escolha a **rede Wi-Fi** à qual você deseja conectar a ESP32 (isso é para comunicação com o Blynk, não via MQTT).
4. Após criar o projeto, o Blynk fornecerá um **Token de Autenticação** (um código único que permite que o seu app se conecte à ESP32).

Anote esse **Token**, pois vamos usá-lo no código da ESP32.

---

### 2. **Configuração da ESP32 com o Blynk via MQTT**

A ESP32 irá enviar dados para o app Blynk via MQTT. Vamos utilizar a **biblioteca PubSubClient** para comunicação MQTT com o servidor Blynk.

#### Passo 1: Instalar as Bibliotecas Necessárias no Arduino IDE

1. **PubSubClient**: Para usar MQTT.

   * Vá em **Sketch > Incluir Biblioteca > Gerenciar Bibliotecas**.
   * Busque por **PubSubClient** e instale a biblioteca.

2. **Blynk**: A biblioteca oficial do Blynk.

   * Vá em **Sketch > Incluir Biblioteca > Gerenciar Bibliotecas**.
   * Busque por **Blynk** e instale a biblioteca.

#### Passo 2: Escrever o Código para a ESP32

Aqui está o código para configurar a **ESP32** para se conectar ao Blynk via **MQTT**.

```cpp
#include <WiFi.h>
#include <PubSubClient.h>
#include <BlynkSimpleEsp32.h>

// Definir credenciais Wi-Fi
const char* ssid = "nome_da_rede_wifi";
const char* password = "senha_wifi";

// Definir informações do broker MQTT (Blynk MQTT)
const char* mqttServer = "mqtt.blynk.cloud";   // Servidor MQTT do Blynk
const int mqttPort = 1883;                      // Porta MQTT
const char* mqttUser = "YOUR_BLYNK_AUTH_TOKEN"; // Token de autenticação do Blynk
const char* mqttPassword = "";                  // Senha do broker (geralmente vazio)

WiFiClient espClient;
PubSubClient client(espClient);

// Definir o Token de autenticação Blynk
char auth[] = "YOUR_BLYNK_AUTH_TOKEN";

// Função para conectar ao Wi-Fi
void setupWiFi() {
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Conectando ao Wi-Fi...");
  }
  Serial.println("Conectado ao Wi-Fi");
}

// Função para conectar ao Broker MQTT
void reconnect() {
  while (!client.connected()) {
    Serial.print("Tentando se conectar ao Broker MQTT...");
    if (client.connect("ESP32Client", mqttUser, mqttPassword)) {
      Serial.println("Conectado ao MQTT!");
      // Inscrever-se em um tópico
      client.subscribe("esp32/controle");
    } else {
      Serial.print("Falha ao conectar, rc=");
      Serial.print(client.state());
      delay(2000);
    }
  }
}

void setup() {
  Serial.begin(115200);

  // Configurar Wi-Fi
  setupWiFi();

  // Conectar ao Blynk via MQTT
  client.setServer(mqttServer, mqttPort);
  client.setCallback(mqttCallback);

  // Iniciar o Blynk
  Blynk.begin(auth, WiFi.localIP(), 8080);
}

// Função de callback do MQTT
void mqttCallback(char* topic, byte* payload, unsigned int length) {
  String message = "";
  for (int i = 0; i < length; i++) {
    message += (char)payload[i];
  }
  Serial.println("Mensagem recebida do tópico: " + String(topic));
  Serial.println("Mensagem: " + message);
  
  // Controle a partir da mensagem recebida
  if (String(topic) == "esp32/controle") {
    if (message == "ligar") {
      digitalWrite(LED_BUILTIN, HIGH); // Liga o LED
    } else if (message == "desligar") {
      digitalWrite(LED_BUILTIN, LOW); // Desliga o LED
    }
  }
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  // Enviar dados para o Blynk
  Blynk.run();
}
```

### O que o código faz:

1. **Conectar ao Wi-Fi**: A ESP32 se conecta à sua rede Wi-Fi com as credenciais fornecidas.
2. **Conectar ao Broker MQTT do Blynk**: O código tenta conectar-se ao servidor MQTT do Blynk (`mqtt.blynk.cloud`).
3. **Inscrição em tópicos**: A ESP32 se inscreve no tópico `esp32/controle`, onde vai receber mensagens (exemplo: "ligar", "desligar").
4. **Envio de Dados para o Blynk**: A ESP32 envia dados para o app Blynk. O controle do LED será feito com base nas mensagens recebidas via MQTT.

### 3. **Configurar o App Blynk**

#### Passo 1: Criar Interface no Blynk

1. Abra o app Blynk e edite seu projeto.
2. Adicione um **botão** para controlar a ESP32.
3. No botão, configure a ação para enviar a mensagem "ligar" ou "desligar" para o tópico `esp32/controle`.

   * Vá em **Configurações do Widget > Ações após Pressionar**.
   * Defina a ação para enviar a mensagem **"ligar"** ou **"desligar"** para o tópico MQTT (`esp32/controle`).

#### Passo 2: Testar o Controle

1. **No App**: Você verá o botão que envia a mensagem "ligar" ou "desligar".
2. **No Código da ESP32**: A ESP32 receberá a mensagem via MQTT e, com base nisso, controlará um LED (ou outro dispositivo conectado).

---

### 4. **Testando a Conexão**

1. **No Monitor Serial da ESP32**: Abra o **Monitor Serial** no Arduino IDE para ver se a ESP32 está se conectando ao Wi-Fi e ao MQTT corretamente.
2. **No App Blynk**: Clique no botão para enviar o comando "ligar" ou "desligar". Verifique se o LED na ESP32 responde conforme esperado.

### Conclusão

Agora você tem uma conexão via **MQTT** entre a **ESP32** e o **Blynk**, com controle remoto de dispositivos (como LEDs) através de uma interface gráfica interativa no smartphone.

Se você quiser adicionar mais sensores ou controles, basta configurar mais widgets no Blynk e modificar o código da ESP32 para lidar com os novos tópicos MQTT.

Se tiver mais alguma dúvida ou quiser continuar com outro passo, é só me falar!
https://github.com/Blynk-Technologies/Blynk-MQTT-Samples
